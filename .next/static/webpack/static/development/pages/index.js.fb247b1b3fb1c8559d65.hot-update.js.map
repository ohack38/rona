{"version":3,"file":"static/webpack/static/development/pages/index.js.fb247b1b3fb1c8559d65.hot-update.js","sources":["webpack:///./components/CountrySelector.js","webpack:///./components/Stats.js","webpack:///./pages/index.js","webpack:///./utils/useStats.js"],"sourcesContent":["import { useState } from 'react';\nimport useStats from '../utils/useStats';\nimport Stats from './Stats';\n\nexport default function CountrySelector() {\n  const { stats: countries, loading, error } = useStats(\n    'https://covid19.mathdro.id/api/countries'\n  );\n  const [selectedCountry, setSelectedCountry] = useState('USA');\n  if (loading) return <p>Loading...</p>;\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error...</p>;\n\n  return (\n    <div>\n      <h2>Currently Showing {selectedCountry}</h2>\n      <select\n        onChange={e => {\n          setSelectedCountry(e.target.value);\n        }}\n      >\n        {Object.entries(countries.countries).map(([country, code]) => (\n          <option\n            selected={selectedCountry === countries.iso3[code]}\n            key={code}\n            value={countries.iso3[code]}\n          >\n            {country}\n          </option>\n        ))}\n      </select>\n      <Stats\n        url={`https://covid19.mathdro.id/api/countries/${selectedCountry}`}\n      ></Stats>\n    </div>\n  );\n}","import styled from 'styled-components';\nimport useStats from '../utils/useStats';\n\nconst StatGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-gap: 1rem;\n`;\nconst StatBlock = styled.div`\n  background: #f2f2f2;\n  font-size: 2rem;\n  padding: 2rem;\n  border-radius: 2rem;\n  display: grid;\n  align-items: center;\n  justify-items: center;\n  text-align: center;\n`;\n\nexport default function Stats({ url }) {\n  const { stats, loading, error } = useStats(url);\n  console.log(stats, loading, error);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error...</p>;\n  return (\n    <StatGrid>\n      <StatBlock>\n        <h3>Confirmed:</h3>\n        <span>{stats.confirmed.value}</span>\n      </StatBlock>\n      <StatBlock>\n        <h3>Deaths:</h3>\n        <span>{stats.deaths.value}</span>\n      </StatBlock>\n      <StatBlock>\n        <h3>Recovered:</h3>\n        <span>{stats.recovered.value}</span>\n      </StatBlock>\n    </StatGrid>\n  );\n}","import useStats from '../utils/useStats';\nimport Stats from '../components/Stats';\nimport CountrySelector from '../components/CountrySelector';\n\n\n\nexport default function IndexPage() {\n    return(\n        <div>\n            <Stats url=\"https://covid19.mathdro.id/api\"></Stats>\n            <CountrySelector></CountrySelector>\n            \n        </div>\n    ); \n}","import { useState, useEffect } from 'react';\n\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    console.log('Mounting or updating');\n    async function fetchData() {\n      setLoading(true);\n      setError();\n      console.log('Fetching Data');\n      const data = await fetch(url)\n        .then(res => res.json())\n        .catch(err => {\n          setError(err);\n        });\n      setStats(data);\n      setLoading(false);\n    }\n    fetchData();\n  }, [url]);\n  return {\n    stats,\n    loading,\n    error,\n  };\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAWA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AAEA;AAKA;AAWA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;;;;ACxCA;AACA;AACA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAHA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AATA;AAIA;AAKA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;;;;A","sourceRoot":""}